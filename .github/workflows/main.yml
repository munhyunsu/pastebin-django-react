name: CICD basic

on:
  push:
    branches: [ main ]

env:
  PUBLIC_URL: /pastebin

jobs:
  deploy:
    name: Deploy
    runs-on: [ self-hosted ]
    steps:
      - name: Kill running servers
        run: |
          if [ $(ps aux | grep ' [p]ython3 manage.py runserver' | awk '{print $2}') ]; then
            kill -2 $(ps aux | grep ' [p]ython3 manage.py runserver' | awk '{print $2}') &> /dev/null
          fi
          if [ $(ps aux | grep ' [n]pm start' | awk '{print $2}') ]; then
            kill -9 $(ps aux | grep ' [n]pm start' | awk '{print $2}') &> /dev/null
          fi
          if [ $(ps aux | grep '[s]tart.js' | awk '{print $2}') ]; then
            kill -9 $(ps aux | grep '[s]tart.js' | awk '{print $2}') &> /dev/null
          fi
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run
        run: |
          cd ${GITHUB_WORKSPACE}
          echo $(pwd)
          cd backend
          echo $(pwd)
          python3 -m venv venv
          source venv/bin/activate
          pip3 install --upgrade -r requirements.txt
          nohup python3 manage.py runserver 1>nohup/stdout.txt 2>nohup/stderr.txt &
          deactivate
          cd ../frontend
          npm install
          PUBLIC_URL="/pastebin"
          echo PUBLIC_URL=${PUBLIC_URL} > .env
          nohup npm start 1>nohup/stdout.txt 2>nohup/stderr.txt &
